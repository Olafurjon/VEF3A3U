<?php
/**
 * Created by PhpStorm.
 * User: 3010943379
 * Date: 20.1.2017
 * Time: 09:53
 */

namespace Biomyndaklasi;


class Biomynd
{
    function getMovieInfo($tala){ #er að vinna með CSV metaskrá, sem inniheldur yfir 5000 titla en ég takmarka for loopuna við 100 eintök, vegna þess að þetta er uninið af öðrum cSV skrán þá get ég ekki treyst að upplýsimgar sem koma fram á sumum myndum séu 100%
        $File = 'movie_metadata.csv';

        $arrResult  = array(); #skilgreinir arrayin til að taka á móti upplýsingunum
        $handle     = fopen($File, "r");
        if(empty($handle) === false) {
            while(($data = fgetcsv($handle, 1000, ",")) !== FALSE){
                $arrResult[] = $data;
            }
            fclose($handle);
        }
        $directors = []; #Initializa arrayin til að auðvelda mér það að vinna með þá
        $movies = [];
        $duration = [];
        $rating = [];
        $actor = [];

        for($i = 0; $i < 150; $i++) #Hérna get ég gert náttúrulega count($arrrResult og tekið bara allt, en látum 100 duga
        {
            array_push($directors,$arrResult[$i][1]); #Hérna dúndrast upplýsingar í viðeigandi array
            $part1 = substr($arrResult[$i][11],0,-1);
            array_push($movies,$part1);
            array_push($duration,$arrResult[$i][3]);
            array_push($rating,$arrResult[$i][25]);
            array_push($actor,$arrResult[$i][10]);

        }

        $mynd = [];


        array_push($mynd,$directors[$tala],$movies[$tala],$duration[$tala],$rating[$tala],$actor[$tala]); #Hérna sameina ég svo allar viðeigandi upplýsingar í sama Array
        /* echo("$mynd[0], $mynd[1], $mynd[2], $mynd[3]"); */
        return $mynd;
    } #Fallið sem vinnur með CSV skránna og skilar array
    public $nafn; #breyturnar sem ég mun nota
    public $producer;
    public $lengd;
    public $rating;

    public function __construct($tala) #Constructa bara með að taka inn tölu og þá notast getmoviefunctionið til að fá upplysingar
    {
        $myndinfo = $this->getMovieInfo($tala);
        $this->nafn = $myndinfo[1] ;
        $this->producer = $myndinfo[0];
        $this->lengd = $myndinfo[2];
        $this->rating = $myndinfo[3];
    }

    public function __toString() #Hérna er ég að segja þessu að birtast svona þegar ég echoa þetta
    {
        return "Nafn á mynd: ". $this->nafn ."<br>".
            "Nafn á Producer: ". $this->producer . "<br>".
            "Lengd Myndar:".$this->lengd." mín <br>".
            "Einkunn myndar: ".$this->rating."<br>";

    }

}

class Leikari extends Biomynd # Hérna bý ég til subclassa sem erfir allt frá Biomyndaklasanum og skilar sama nema geymir upplýsingarnar um aðalleikarann,
{
    public $actor; #Geymir eina breyt en ég hefði getað fengið hann til að gera meira en mér datt bókstaflega ekkert sniðugt í hug nema einhverjar rosapælingar og hefði þá þurft að implimenta JS og mun meiri vinnu en ég get gefið

    public function __construct($tala) #alveg eins og foreldrið tekur tölu og vinnur með sömu tölu hjá parentinu til að skila inn sömu upplýsingum
    {   $myndinfo = $this->getMovieInfo($tala);
        parent::__construct($tala);
        $this->actor = $myndinfo[4];
    }

    public function __toString() # tekur parent tostring aðferðina nema bætir við aukatexta
    {
        return parent::__toString() . "Aðalleikari: ".$this->actor."<br>"; // TODO: Change the autogenerated stub
    }
}